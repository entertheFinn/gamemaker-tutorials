<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move based on keyboard

// this can be redone with globals set from prefs if preferred
var up = keyboard_check(ord('W')) || keyboard_check(vk_up);
var left = keyboard_check(ord('A')) || keyboard_check(vk_left);
var right = keyboard_check(ord('D')) || keyboard_check(vk_right);
var down = keyboard_check(ord('S')) || keyboard_check(vk_down);

// change sprite names as desired
if (up &amp;&amp; left) { // diaganol checks always first
  direction = 135;
  sprite_index = sPlayerNW;
}
else if (up &amp;&amp; right) {
  direction = 45;
  sprite_index = sPlayerNE;
}
else if (down &amp;&amp; left) {
  direction = 225;
  sprite_index = sPlayerSW;
}
else if (down &amp;&amp; right) {
  direction = 315;
  sprite_index = sPlayerSE;
} 
else if (up) {
  direction = 90;
  sprite_index = sPlayerN;
}
else if (left) {
  direction = 180;
  sprite_index = sPlayerW;
}
else if (right) {
  direction = 0;
  sprite_index = sPlayerE;
}
else if (down) {
  direction = 270;
  sprite_index = sPlayerS;
}

// using speed instead of x,y allows us to still use friction
// (which can be set elsewhere, but we'll do it here to be lazy)
friction = 0.7;

// we always use direction and speed instead of x,y because it is
// more realistic circular movement (avoids faster diag)
if (up || left || right || down) {
  speed = 5;
}
else { 
  if (speed == 0) {
    sprite_index = sPlayerIdle; // ima just sittin here
  }
  else {
    // ima still sliding from low friction in last direction, do nothing
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
